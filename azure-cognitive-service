from azure.cognitiveservices.vision.computervision import ComputerVisionClient
from azure.cognitiveservices.vision.computervision.models import OperationStatusCodes
from azure.cognitiveservices.vision.computervision.models import VisualFeatureTypes
from msrest.authentication import CognitiveServicesCredentials
import requests
from array import array
import os
from PIL import Image
import sys
import time
import json



#Instructions
#Change the read_image_url to extraxt text from a new image.
read_image_url = "https://user-images.githubusercontent.com/100542383/156890156-bf471f28-95b2-4e54-bfba-680972c750bc.jpg"



## Make env variables from .env avaiable in this file
from dotenv import load_dotenv
load_dotenv()

'''
Authenticate
Authenticates your credentials and creates a client.
'''

subscription_key = os.getenv('AZURE_CONGNITIVE_SERVICE_KEY')
endpoint = os.getenv('AZURE_CONGNITIVE_SERVICE_ENDPOINT')


computervision_client = ComputerVisionClient(endpoint, CognitiveServicesCredentials(subscription_key))


'''
OCR: Read File using the Read API, extract text - remote
This example will extract text in an image, then print results, line by line.
This API call can also extract handwriting style text (not shown).
'''

# Get an image with text


###### Grab Text from Image Start ##########


""" # Call API with URL and raw response (allows you to get the operation location)
read_response = computervision_client.read(read_image_url,  raw=True)

# Get the operation location (URL with an ID at the end) from the response
read_operation_location = read_response.headers["Operation-Location"]
# Grab the ID from the URL
operation_id = read_operation_location.split("/")[-1]

# Call the "GET" API and wait for it to retrieve the results 
while True:
    read_result = computervision_client.get_read_result(operation_id)
    if read_result.status not in ['notStarted', 'running']:
        break
    time.sleep(1)

# Print the detected text, line by line
if read_result.status == OperationStatusCodes.succeeded:
    formated_text = ""
    for text_result in read_result.analyze_result.read_results:
        for line in text_result.lines:
            formated_text = formated_text + line.text
            #print(line.text)
            
print(formated_text) """


###### Grab Text from Image End ##########


###### Analyze image Start ##########


url = "https://mocomputervision.cognitiveservices.azure.com/vision/v3.2/analyze?visualFeatures=Color"
headers = {"Content-Type": "application/json", "Ocp-Apim-Subscription-Key": subscription_key}
payload = {"url" : "https://user-images.githubusercontent.com/100542383/156890156-bf471f28-95b2-4e54-bfba-680972c750bc.jpg"}
json_formated_payload = json.dumps(payload)

r = requests.post(url, data = json_formated_payload, headers=headers)
print(r.text)


###### Analyze image End ##########


